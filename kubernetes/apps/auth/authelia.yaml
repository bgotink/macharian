apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: authelia
  namespace: auth
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      authelia:
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom:
            - secretRef:
                name: authelia-init-db-secrets
        containers:
          app:
            image:
              repository: ghcr.io/authelia/authelia
              tag: 4.38.9@sha256:491745686a70863b33a9978795e13fdeb8bc82e4fcfa456bf30f788827114cb0
            env:
              AUTHELIA_SERVER_ADDRESS: tcp://0.0.0.0:8080
              AUTHELIA_SERVER_DISABLE_HEALTHCHECK: "true"
              # AUTHELIA_TELEMETRY_METRICS_ADDRESS: tcp://0.0.0.0:8181
              # AUTHELIA_TELEMETRY_METRICS_ENABLED: "true"
              AUTHELIA_THEME: dark
              X_AUTHELIA_CONFIG: /config/configuration.yaml
              X_AUTHELIA_CONFIG_FILTERS: template
            envFrom:
            - secretRef:
                name: authelia-secrets
            - secretRef:
                name: authelia-db-secrets
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/health
                    port: &port 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65534
        runAsGroup: 65534
        seccompProfile: { type: RuntimeDefault }
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: authelia
    service:
      app:
        controller: authelia
        ports:
          http:
            port: *port
          # metrics:
          #   port: 8181
    # serviceMonitor:
    #   app:
    #     serviceName: authelia
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /metrics
    #         interval: 1m
    #         scrapeTimeout: 10s
    ingress:
      app:
        hosts:
          - host: auth.${SECRET_HOST}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: configMap
        name: authelia-config
        globalMounts:
          - path: /config/configuration.yaml
            subPath: configuration.yaml
            readOnly: true
      users:
        type: secret
        name: authelia-secrets
        globalMounts:
          - path: /config/users.yaml
            subPath: users.yaml
            readOnly: true
