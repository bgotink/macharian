apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  # dependsOn:
  #   - name: intel-device-plugin-gpu
  #     namespace: kube-system
  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/linuxserver/jellyfin
              tag: 10.9.6@sha256:a363aa018edee61bcee46be5f8dbd0db2a317b2bc0f95121a46e522d798c2a63
            env:
              TZ: ${TIMEZONE}
              PUID: '568'
              PGID: '568'
              JELLYFIN_PublishedServerUrl: jellyfin.${SECRET_HOST}
            probes:
              liveness: &probe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probe
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                # gpu.intel.com/i915: 1
                memory: 16Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 10000]
        seccompProfile: { type: RuntimeDefault }
      # affinity:
      #   podAntiAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       - labelSelector:
      #           matchExpressions:
      #             - key: app.kubernetes.io/name
      #               operator: In
      #               values: ["frigate"]
      #         topologyKey: kubernetes.io/hostname
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"
    service:
      app:
        controller: jellyfin
        ports:
          http:
            port: 8096
    ingress:
      app:
        hosts:
          - host: jellyfin.${SECRET_HOST}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
    persistence:
      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOncePod
        size: 1Gi
        globalMounts:
          - path: /config
      # Separate PVC for cache to avoid backing up cache files
      cache:
        type: persistentVolumeClaim
        accessMode: ReadWriteOncePod
        size: 75Gi
        globalMounts:
          - path: /config/cache
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/log
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        existingClaim: warp-media-data
        globalMounts:
          - path: /media
            readOnly: true
