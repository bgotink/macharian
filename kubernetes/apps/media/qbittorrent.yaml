apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: qbittorrent
  namespace: media
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      qbittorrent:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/qbittorrent
              tag: 5.0.1@sha256:7fc5af4f7f9c8e4998aaa18b5e2e634757c55f70c23b9bd46b40e09a4c7acda5
            env:
              TZ: ${TIMEZONE}
              QBITTORRENT__PORT: &port 8080
              QBITTORRENT__BT_PORT: &bittorrentPort 50413
              QBT_Preferences__WebUI__AlternativeUIEnabled: false
              QBT_Preferences__WebUI__AuthSubnetWhitelistEnabled: true
              QBT_Preferences__WebUI__AuthSubnetWhitelist: |-
                10.0.0.0/8, ${SECRET_NETWORK}
              QBT_Preferences__WebUI__LocalHostAuth: false
              QBT_BitTorrent__Session__Interface: eth0
              QBT_BitTorrent__Session__InterfaceAddress:
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              QBT_BitTorrent__Session__InterfaceName: eth0
            # probes:
            #   liveness: &probe
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /api/v2/app/version
            #         port: *port
            #       initialDelaySeconds: 30
            #       periodSeconds: 30
            #       timeoutSeconds: 10
            #       failureThreshold: 6
            #   readiness: *probe
            #   startup:
            #     enabled: true
            #     spec:
            #       failureThreshold: 30
            #       periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 500Mi
              limits:
                memory: 8Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: qbittorrent
        # type: LoadBalancer
        # annotations:
        #   io.cilium/lb-ipam-ips: <fixed IP here>
        ports:
          http:
            port: *port
          # bittorrent:
          #   enabled: true
          #   port: *bittorrentPort
          #   protocol: TCP
    ingress:
      app:
        annotations:
          hajimari.io/enable: "true"
          hajimari.io/appName: Torrent Downloader
          hajimari.io/instance: "admin"
          hajimari.io/group: "media"
          hajimari.io/icon: arcticons:qbittorrent-remote
          nginx.ingress.kubernetes.io/auth-url: |-
              http://ak-outpost-authentik-embedded-outpost.auth.svc.cluster.local:9000/outpost.goauthentik.io/auth/nginx
          nginx.ingress.kubernetes.io/auth-signin: |-
              https://qbittorrent.${SECRET_HOST}/outpost.goauthentik.io/start?rd=$escaped_request_uri
          nginx.ingress.kubernetes.io/auth-response-headers: |-
              Set-Cookie,X-authentik-username,X-authentik-groups,X-authentik-email,X-authentik-name,X-authentik-uid
          nginx.ingress.kubernetes.io/auth-snippet: |
              proxy_set_header X-Forwarded-Host $http_host;
        hosts:
          - host: qbittorrent.${SECRET_HOST}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: persistentVolumeClaim
        accessMode: ReadWriteOncePod
        size: 1Gi

      media:
        existingClaim: warp-media-data
        globalMounts:
          - path: /data/media/downloads/qbittorrent
            subPath: downloads/qbittorrent
